variables:
  HUGO_VERSION: 0.73.0
  NODE_VERSION: 12.18.2
  REVIEWDOG_VERSION: v0.10.1
  REVIEWDOG_INSTALL_DIR: .bin
  REVIEWDOG: ${REVIEWDOG_INSTALL_DIR}/reviewdog-${REVIEWDOG_VERSION}
  GIT_SUBMODULE_STRATEGY: recursive
  # キャッシュを強制的に無効化したい時は、CACHE_TAGを変更してください
  CACHE_TAG: 2020.07.02

workflow:
  rules:
    - when: always

stages:
  - build
  - prepare-tools
  - test
  - deploy

cache: &global_cache
  # branchごとに異なるキャッシュを利用するように設定しておきます
  key: ${CACHE_TAG}-${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - .bin
    - node_modules
    - santoku-app/node_modules
  policy: pull

.on_master_or_mr: &master_or_merge_request
  - master
  - merge_request

.on_master: &master
  - master

prepare-tools:
  stage: prepare-tools
  image: node:${NODE_VERSION}
  # プッシュされたら、とりあえずキャッシュを作っておきます
  cache:
    <<: *global_cache
    policy: pull-push
  script:
    # reviewdogのバイナリを落としてパスを通します
    - |
      if [ ! -x ${REVIEWDOG} ]; then
        echo "Removing previous versions"
        rm -f ${REVIEWDOG_INSTALL_DIR}/reviewdog*
        echo "Installing reviewdog as ${REVIEWDOG}"
        mkdir -p ${REVIEWDOG_INSTALL_DIR}
        curl -fSL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b ${REVIEWDOG_INSTALL_DIR} ${REVIEWDOG_VERSION}
        mv ${REVIEWDOG_INSTALL_DIR}/reviewdog ${REVIEWDOG}
        chmod +x ${REVIEWDOG}
      fi
    # ドキュメント用のNode.jsツールをインストールします
    - npm install --cache .npm --prefer-offline --no-fund --no-audit
    # santoku-appの依存ライブラリをインストールします
    - npm install --cache .npm --prefer-offline --no-fund --no-audit --prefix santoku-app

lint-documents:
  stage: test
  image: node:${NODE_VERSION}
  only: *master_or_merge_request
  script: npm run -s textlint | ${REVIEWDOG} -tee -f eslint -reporter gitlab-mr-discussion -fail-on-error

lint-application:
  stage: test
  image: node:${NODE_VERSION}
  only: *master_or_merge_request
  script: npm run -s eslint --prefix santoku-app | ${REVIEWDOG} -tee -f eslint -reporter gitlab-mr-discussion -fail-on-error

test-applications:
  stage: test
  image: node:${NODE_VERSION}
  only: *master_or_merge_request
  script: npm run -s test:ci --prefix santoku-app
  artifacts:
    paths:
      - santoku-app/junit.xml
      - santoku-app/coverage/cobertura-coverage.xml
    reports:
      junit: santoku-app/junit.xml
      cobertura: santoku-app/coverage/cobertura-coverage.xml
    expire_in: 1 month

build-documents:
  stage: build
  image: registry.gitlab.com/pages/hugo:${HUGO_VERSION}
  only: *master_or_merge_request
  # Hugoビルドにはツールのインストールなどは不要。キャッシュの復元もしない。
  cache: {}
  script: hugo --minify
  artifacts:
    paths:
      - public
    expire_in: 1 month

pages:
  stage: deploy
  dependencies:
    - build-documents
  image: registry.gitlab.com/pages/hugo:${HUGO_VERSION}
  only: *master
  artifacts:
    paths:
      - public
  script: echo 'deploy only'

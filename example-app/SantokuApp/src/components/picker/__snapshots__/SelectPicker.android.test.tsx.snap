// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectPicker only with required props renders successfully: SelectPicker  only with required props. 1`] = `
<View>
  <TextInput
    allowFontScaling={true}
    editable={false}
    rejectResponderTermination={true}
    testID="textInput"
    underlineColorAndroid="transparent"
    value="test1"
  />
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "color": "transparent",
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <RNCPicker
      items={
        Array [
          Object {
            "label": "test1",
            "testID": undefined,
            "textColor": undefined,
            "value": "1",
          },
          Object {
            "label": "test2",
            "testID": undefined,
            "textColor": undefined,
            "value": "2",
          },
        ]
      }
      numberOfLines={1}
      onChange={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
      testID="picker"
    />
  </View>
</View>
`;

exports[`SelectPicker with all props should be applied all properly with custom xxx component: SelectPicker all properly with custom xxx component. 1`] = `
<View>
  <View
    testID="customTextInput"
  />
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "color": "transparent",
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <RNCPicker
      items={
        Array [
          Object {
            "label": "test1",
            "testID": undefined,
            "textColor": undefined,
            "value": "1",
          },
          Object {
            "label": "test2",
            "testID": undefined,
            "textColor": undefined,
            "value": "2",
          },
        ]
      }
      numberOfLines={5}
      onChange={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
      testID="picker"
    />
  </View>
</View>
`;

exports[`SelectPicker with all props should be applied all properly with default xxx component: SelectPicker all properly with default xxx component. 1`] = `
<View>
  <TextInput
    allowFontScaling={true}
    editable={false}
    placeholder="please select..."
    rejectResponderTermination={true}
    style={
      Object {
        "color": "red",
      }
    }
    testID="textInput"
    underlineColorAndroid="transparent"
    value="test1"
  />
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "color": "transparent",
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <RNCPicker
      items={
        Array [
          Object {
            "label": "test1",
            "testID": undefined,
            "textColor": undefined,
            "value": "1",
          },
          Object {
            "label": "test2",
            "testID": undefined,
            "textColor": undefined,
            "value": "2",
          },
        ]
      }
      numberOfLines={5}
      onChange={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          undefined,
        ]
      }
      testID="picker"
    />
  </View>
</View>
`;

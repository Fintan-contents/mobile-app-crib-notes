// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home マウントされたときに正常にレンダリングされること 1`] = `
[
  <RCTSafeAreaView
    style={
      [
        {
          "flex": 1,
        },
      ]
    }
    testID="HomePage"
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      ListHeaderComponent={
        <React.Fragment>
          <ForwardRef
            px="p24"
            py="p32"
          >
            <ForwardRef
              letterSpacing={0.18}
              lineHeight={24}
              variant="font20Bold"
            >
              募集中のイベント
            </ForwardRef>
          </ForwardRef>
        </React.Fragment>
      }
      data={
        [
          {
            "navigateToQuestionDetail": [Function],
            "question": {},
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={
        [
          1,
        ]
      }
      style={
        [
          {},
        ]
      }
      viewabilityConfigCallbackPairs={[]}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              [
                {
                  "paddingHorizontal": 24,
                  "paddingVertical": 32,
                },
              ]
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#212121",
                    "fontSize": 20,
                    "fontWeight": "bold",
                    "letterSpacing": 0.18,
                    "lineHeight": 24,
                  },
                ]
              }
            >
              募集中のイベント
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#FFF5E4",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingBottom": 16,
                  "paddingHorizontal": 24,
                  "paddingTop": 32,
                },
              ]
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#212121",
                    "fontSize": 20,
                    "fontWeight": "bold",
                    "letterSpacing": 0.18,
                    "lineHeight": 24,
                  },
                ]
              }
            >
              質問
            </Text>
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight="24"
                  bbWidth="24"
                  fill="none"
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      [
                        {
                          "height": 24,
                          "width": 24,
                        },
                      ],
                      {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    fill={null}
                    propList={
                      [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M3 18H9V16H3V18ZM3 6V8H21V6H3ZM3 13H15V11H3V13Z"
                      fill={
                        {
                          "payload": 4280361249,
                          "type": 0,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  [
                    {
                      "paddingLeft": 32,
                    },
                  ]
                }
              />
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight="24"
                  bbWidth="24"
                  fill="none"
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      [
                        {
                          "height": 24,
                          "width": 24,
                        },
                      ],
                      {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    fill={null}
                    propList={
                      [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M6.99999 6H17L11.99 12.3L6.99999 6ZM4.24999 5.61C6.26999 8.2 9.99999 13 9.99999 13V19C9.99999 19.55 10.45 20 11 20H13C13.55 20 14 19.55 14 19V13C14 13 17.72 8.2 19.74 5.61C20.25 4.95 19.78 4 18.95 4H5.03999C4.20999 4 3.73999 4.95 4.24999 5.61Z"
                      fill={
                        {
                          "payload": 4280361249,
                          "type": 0,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
              <View
                style={
                  [
                    {
                      "paddingLeft": 32,
                    },
                  ]
                }
              />
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight="24"
                  bbWidth="24"
                  fill="none"
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      [
                        {
                          "height": 24,
                          "width": 24,
                        },
                      ],
                      {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    fill={null}
                    propList={
                      [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M21.41 11.58L12.41 2.58C12.05 2.22 11.55 2 11 2H4C2.9 2 2 2.9 2 4V11C2 11.55 2.22 12.05 2.59 12.42L11.59 21.42C11.95 21.78 12.45 22 13 22C13.55 22 14.05 21.78 14.41 21.41L21.41 14.41C21.78 14.05 22 13.55 22 13C22 12.45 21.77 11.94 21.41 11.58ZM13 20.01L4 11V4H11V3.99L20 12.99L13 20.01Z"
                      fill={
                        {
                          "payload": 4280361249,
                          "type": 0,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M6.5 8C7.32843 8 8 7.32843 8 6.5C8 5.67157 7.32843 5 6.5 5C5.67157 5 5 5.67157 5 6.5C5 7.32843 5.67157 8 6.5 8Z"
                      fill={
                        {
                          "payload": 4280361249,
                          "type": 0,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <RCTSafeAreaView
      style={
        [
          {},
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "bottom": 32,
              "flexDirection": "column",
              "justifyContent": "center",
              "position": "absolute",
              "right": 8,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "backgroundColor": "#29B6F6",
                  "borderRadius": 28,
                  "elevation": 1,
                  "flexDirection": "row",
                  "height": 56,
                  "justifyContent": "center",
                  "margin": 8,
                  "shadowColor": "#212121",
                  "shadowOffset": {
                    "height": 4,
                    "width": 0,
                  },
                  "shadowOpacity": 0.35,
                  "shadowRadius": 4,
                  "width": 56,
                },
              ]
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="24"
              bbWidth="24"
              fill="none"
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  [
                    {
                      "height": 24,
                      "width": 24,
                    },
                  ],
                  {
                    "flex": 0,
                    "height": 24,
                    "width": 24,
                  },
                ]
              }
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                fill={null}
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z"
                    fill={
                      {
                        "payload": 4294967295,
                        "type": 0,
                      }
                    }
                    propList={
                      [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
                <RNSVGDefs>
                  <RNSVGClipPath
                    name="clip0_5404_1261"
                  >
                    <RNSVGRect
                      fill={
                        {
                          "payload": 4294967295,
                          "type": 0,
                        }
                      }
                      height="24"
                      propList={
                        [
                          "fill",
                        ]
                      }
                      width="24"
                      x="0"
                      y="0"
                    />
                  </RNSVGClipPath>
                </RNSVGDefs>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
    <RCTSafeAreaView
      style={
        [
          {},
        ]
      }
    >
      <View
        style={
          [
            {
              "position": "absolute",
              "right": 10,
              "top": 10,
            },
          ]
        }
      >
        <ActivityIndicator
          color="#E0E0E0"
          style={
            [
              {},
            ]
          }
        />
      </View>
    </RCTSafeAreaView>
  </RCTSafeAreaView>,
  <View
    testID="FullWindowOverlay"
  />,
  <View
    testID="FullWindowOverlay"
  />,
]
`;

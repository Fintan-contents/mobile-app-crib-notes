// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OverlayBackdrop only with required props renders successfully only with required props: AnimatedView with invisible. 1`] = `
<View
  style={
    {
      "bottom": 0,
      "height": 400,
      "position": "absolute",
      "width": 200,
    }
  }
/>
`;

exports[`OverlayBackdrop only with required props renders successfully only with required props: AnimatedView with visible. 1`] = `
<View
  style={
    {
      "bottom": 0,
      "height": 400,
      "position": "absolute",
      "width": 200,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      entering={
        FadeIn {
          "build": [Function],
          "callbackV": [Function],
          "dampingRatioV": undefined,
          "dampingV": undefined,
          "delayV": undefined,
          "durationV": 300,
          "easingV": undefined,
          "initialValues": undefined,
          "massV": undefined,
          "overshootClampingV": undefined,
          "randomizeDelay": false,
          "reduceMotionV": "system",
          "restDisplacementThresholdV": undefined,
          "restSpeedThresholdV": undefined,
          "rotateV": undefined,
          "stiffnessV": undefined,
          "type": undefined,
        }
      }
      exiting={
        FadeOut {
          "build": [Function],
          "callbackV": [Function],
          "dampingRatioV": undefined,
          "dampingV": undefined,
          "delayV": undefined,
          "durationV": 300,
          "easingV": undefined,
          "initialValues": undefined,
          "massV": undefined,
          "overshootClampingV": undefined,
          "randomizeDelay": false,
          "reduceMotionV": "system",
          "restDisplacementThresholdV": undefined,
          "restSpeedThresholdV": undefined,
          "rotateV": undefined,
          "stiffnessV": undefined,
          "type": undefined,
        }
      }
      style={
        {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
        }
      }
      testID="backdropAnimated"
    />
  </View>
</View>
`;

exports[`OverlayBackdrop with all props should be applied properly: OverlayBackdrop with all props. 1`] = `
<View
  pointerEvents="box-none"
  style={
    {
      "bottom": 10,
      "height": 400,
      "position": "absolute",
      "right": 10,
      "width": 200,
    }
  }
  testID="modal"
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "bottom": 0,
        "display": "none",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    testID="pressable"
  >
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      entering={
        ZoomIn {
          "build": [Function],
          "callbackV": [Function],
          "dampingRatioV": undefined,
          "dampingV": undefined,
          "delayV": undefined,
          "durationV": 500,
          "easingV": undefined,
          "initialValues": undefined,
          "massV": undefined,
          "overshootClampingV": undefined,
          "randomizeDelay": false,
          "reduceMotionV": "system",
          "restDisplacementThresholdV": undefined,
          "restSpeedThresholdV": undefined,
          "rotateV": undefined,
          "stiffnessV": undefined,
          "type": undefined,
        }
      }
      exiting={
        ZoomOut {
          "build": [Function],
          "callbackV": [Function],
          "dampingRatioV": undefined,
          "dampingV": undefined,
          "delayV": undefined,
          "durationV": 300,
          "easingV": undefined,
          "initialValues": undefined,
          "massV": undefined,
          "overshootClampingV": undefined,
          "randomizeDelay": false,
          "reduceMotionV": "system",
          "restDisplacementThresholdV": undefined,
          "restSpeedThresholdV": undefined,
          "rotateV": undefined,
          "stiffnessV": undefined,
          "type": undefined,
        }
      }
      style={
        {
          "backgroundColor": "green",
          "borderColor": "red",
          "flex": 1,
        }
      }
      testID="animatedView"
    />
  </View>
</View>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`YearMonthPicker only with required props renders successfully if invisible: YearMonthPicker if invisible. 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="pressableContainer"
>
  <View
    pointerEvents="box-only"
  >
    <TextInput
      editable={false}
      testID="textInput"
      value="20224"
    />
  </View>
</View>
`;

exports[`YearMonthPicker only with required props renders successfully if visible: YearMonthPicker if visible. 1`] = `
Array [
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    statusBarTranslucent={true}
    transparent={true}
    visible={true}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "display": "flex",
          "left": 0,
          "opacity": 0.4,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="pickerBackdrop"
    />
    <View
      pointerEvents="box-none"
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
          },
        ]
      }
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "transform": Array [
                Object {
                  "translateY": 1000,
                },
              ],
            },
          }
        }
        collapsable={false}
        onLayout={[Function]}
        style={
          Object {
            "backgroundColor": "white",
            "transform": Array [
              Object {
                "translateY": 1000,
              },
            ],
          }
        }
        testID="pickerContainer"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-end",
              "paddingHorizontal": 10,
              "paddingVertical": 8,
            }
          }
          testID="pickerAccessory"
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 10,
            }
          }
          testID="pickerItemsContainer"
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View>
              <RNCPicker
                items={
                  Array [
                    Object {
                      "label": "2017",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 2017,
                    },
                    Object {
                      "label": "2018",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 2018,
                    },
                    Object {
                      "label": "2019",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 2019,
                    },
                    Object {
                      "label": "2020",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 2020,
                    },
                    Object {
                      "label": "2021",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 2021,
                    },
                    Object {
                      "label": "2022",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 2022,
                    },
                  ]
                }
                numberOfLines={1}
                onChange={[Function]}
                selectedIndex={5}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
                testID="yearPicker"
              />
            </View>
          </View>
          <Text />
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View>
              <RNCPicker
                items={
                  Array [
                    Object {
                      "label": "1",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 1,
                    },
                    Object {
                      "label": "2",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 2,
                    },
                    Object {
                      "label": "3",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 3,
                    },
                    Object {
                      "label": "4",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 4,
                    },
                    Object {
                      "label": "5",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 5,
                    },
                    Object {
                      "label": "6",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 6,
                    },
                    Object {
                      "label": "7",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 7,
                    },
                    Object {
                      "label": "8",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 8,
                    },
                    Object {
                      "label": "9",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 9,
                    },
                    Object {
                      "label": "10",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 10,
                    },
                    Object {
                      "label": "11",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 11,
                    },
                    Object {
                      "label": "12",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": 12,
                    },
                  ]
                }
                numberOfLines={1}
                onChange={[Function]}
                selectedIndex={3}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
                testID="monthPicker"
              />
            </View>
          </View>
          <Text />
        </View>
      </View>
    </View>
  </Modal>,
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="pressableContainer"
  >
    <View
      pointerEvents="box-only"
    >
      <TextInput
        editable={false}
        testID="textInput"
        value="20224"
      />
    </View>
  </View>,
]
`;

exports[`YearMonthPicker with all props should be applied all properly: YearMonthPicker all properly. 1`] = `
Array [
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    statusBarTranslucent={true}
    testID="pickerBackdropModal"
    transparent={true}
    visible={true}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "green",
          "borderColor": "red",
          "bottom": 0,
          "display": "flex",
          "left": 0,
          "opacity": 0.4,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="pickerBackdropPressable"
    />
    <View
      pointerEvents="box-none"
      style={
        Array [
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
          },
        ]
      }
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "transform": Array [
                Object {
                  "translateY": 1000,
                },
              ],
            },
          }
        }
        collapsable={false}
        onLayout={[Function]}
        style={
          Object {
            "backgroundColor": "yellow",
            "borderColor": "black",
            "transform": Array [
              Object {
                "translateY": 1000,
              },
            ],
          }
        }
        testID="pickerContainer"
      >
        <View
          style={
            Object {
              "backgroundColor": "blue",
              "flexDirection": "row",
              "justifyContent": "flex-end",
              "paddingHorizontal": 10,
              "paddingVertical": 8,
            }
          }
          testID="pickerAccessory"
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="deleteLink"
          >
            <Text
              style={
                Object {
                  "color": "#d9545e",
                  "fontWeight": "bold",
                  "paddingHorizontal": 10,
                }
              }
            >
              delete
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          />
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="cancelLink"
          >
            <Text
              style={
                Object {
                  "color": "#4577CC",
                  "fontWeight": "bold",
                  "paddingHorizontal": 10,
                }
              }
            >
              cancel
            </Text>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="doneLink"
          >
            <Text
              style={
                Object {
                  "color": "#4577CC",
                  "fontWeight": "bold",
                  "paddingHorizontal": 10,
                }
              }
            >
              done
            </Text>
          </View>
        </View>
        <View
          pointerEvents="none"
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingHorizontal": 10,
            }
          }
          testID="pickerItemsContainer"
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View>
              <RNCPicker
                items={
                  Array [
                    Object {
                      "label": "2017",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 2017,
                    },
                    Object {
                      "label": "2018",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 2018,
                    },
                    Object {
                      "label": "2019",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 2019,
                    },
                    Object {
                      "label": "2020",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 2020,
                    },
                    Object {
                      "label": "2021",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 2021,
                    },
                    Object {
                      "label": "2022",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 2022,
                    },
                  ]
                }
                numberOfLines={5}
                onChange={[Function]}
                selectedIndex={5}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
                testID="yearPicker"
              />
            </View>
          </View>
          <Text>
            年
          </Text>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View>
              <RNCPicker
                items={
                  Array [
                    Object {
                      "label": "1",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 1,
                    },
                    Object {
                      "label": "2",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 2,
                    },
                    Object {
                      "label": "3",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 3,
                    },
                    Object {
                      "label": "4",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 4,
                    },
                    Object {
                      "label": "5",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 5,
                    },
                    Object {
                      "label": "6",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 6,
                    },
                    Object {
                      "label": "7",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 7,
                    },
                    Object {
                      "label": "8",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 8,
                    },
                    Object {
                      "label": "9",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 9,
                    },
                    Object {
                      "label": "10",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 10,
                    },
                    Object {
                      "label": "11",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 11,
                    },
                    Object {
                      "label": "12",
                      "testID": undefined,
                      "textColor": 4294967040,
                      "value": 12,
                    },
                  ]
                }
                numberOfLines={5}
                onChange={[Function]}
                selectedIndex={3}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
                testID="monthPicker"
              />
            </View>
          </View>
          <Text>
            月
          </Text>
        </View>
      </View>
    </View>
  </Modal>,
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="pressableContainer"
  >
    <View
      pointerEvents="box-only"
    >
      <TextInput
        editable={false}
        placeholder="please select..."
        style={
          Object {
            "color": "red",
          }
        }
        testID="textInput"
        value="2022年4月"
      />
    </View>
  </View>,
]
`;

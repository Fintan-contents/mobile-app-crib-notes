// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App マウントされたときに正常にレンダリングされること 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
                "marginTop": 0,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#2089dc",
                          "flex": 1,
                          "justifyContent": "center",
                        }
                      }
                      testID="HomeScreen"
                    >
                      <Text
                        style={
                          Object {
                            "color": "#fefefe",
                            "fontSize": 51.42857142857143,
                          }
                        }
                      >
                        Hello, World!
                      </Text>
                      <View
                        style={
                          Array [
                            Object {
                              "borderRadius": 3,
                              "overflow": "hidden",
                            },
                            Object {
                              "borderRadius": 3,
                            },
                            undefined,
                            false,
                          ]
                        }
                      >
                        <View
                          accessibilityRole="button"
                          accessibilityState={
                            Object {
                              "busy": false,
                              "disabled": false,
                            }
                          }
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#2089dc",
                                "borderColor": "#2089dc",
                                "borderRadius": 3,
                                "borderWidth": 0,
                                "flexDirection": "row",
                                "justifyContent": "center",
                                "padding": 8,
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "color": "white",
                                  "fontSize": 18,
                                  "paddingVertical": 1,
                                  "textAlign": "center",
                                }
                              }
                            >
                              Go to instructions
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "borderRadius": 3,
                              "overflow": "hidden",
                            },
                            Object {
                              "borderRadius": 3,
                            },
                            undefined,
                            false,
                          ]
                        }
                      >
                        <View
                          accessibilityRole="button"
                          accessibilityState={
                            Object {
                              "busy": false,
                              "disabled": false,
                            }
                          }
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#2089dc",
                                "borderColor": "#2089dc",
                                "borderRadius": 3,
                                "borderWidth": 0,
                                "flexDirection": "row",
                                "justifyContent": "center",
                                "padding": 8,
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "color": "white",
                                  "fontSize": 18,
                                  "paddingVertical": 1,
                                  "textAlign": "center",
                                }
                              }
                            >
                              View application information
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "borderRadius": 3,
                              "overflow": "hidden",
                            },
                            Object {
                              "borderRadius": 3,
                            },
                            undefined,
                            false,
                          ]
                        }
                      >
                        <View
                          accessibilityRole="button"
                          accessibilityState={
                            Object {
                              "busy": false,
                              "disabled": false,
                            }
                          }
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                          testID="goToDemoButton"
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#2089dc",
                                "borderColor": "#2089dc",
                                "borderRadius": 3,
                                "borderWidth": 0,
                                "flexDirection": "row",
                                "justifyContent": "center",
                                "padding": 8,
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "color": "white",
                                  "fontSize": 18,
                                  "paddingVertical": 1,
                                  "textAlign": "center",
                                }
                              }
                            >
                              Demo
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        Object {
          "height": 64,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 1,
        }
      }
    />
  </RNCSafeAreaProvider>
</View>
`;

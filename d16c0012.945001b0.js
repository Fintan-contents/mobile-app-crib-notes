(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{135:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return m}));var a=n(3),r=n(7),o=(n(0),n(152)),i={title:"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u306e\u6574\u7406"},c={unversionedId:"react-native/learn/todo-app/split-navigation",id:"react-native/learn/todo-app/split-navigation",isDocsHomePage:!1,title:"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u306e\u6574\u7406",description:"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u5b9a\u7fa9\u306e\u5206\u5272",source:"@site/docs/react-native/learn/todo-app/split-navigation.mdx",slug:"/react-native/learn/todo-app/split-navigation",permalink:"/mobile-app-crib-notes/react-native/learn/todo-app/split-navigation",version:"current",lastUpdatedAt:1614760195,sidebar:"learn",previous:{title:"\u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0",permalink:"/mobile-app-crib-notes/react-native/learn/todo-app/alert"},next:{title:"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u306e\u578b\u5b9a\u7fa9",permalink:"/mobile-app-crib-notes/react-native/learn/todo-app/navigation-hook"}},p=[{value:"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u5b9a\u7fa9\u306e\u5206\u5272",id:"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u5b9a\u7fa9\u306e\u5206\u5272",children:[]}],s={toc:p};function m(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u5b9a\u7fa9\u306e\u5206\u5272"},"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u5b9a\u7fa9\u306e\u5206\u5272"),Object(o.b)("p",null,"\u3044\u307e\u307e\u3067\u306e\u4fee\u6b63\u3067",Object(o.b)("inlineCode",{parentName:"p"},"RootStackNav"),"\u306e\u30b3\u30fc\u30c9\u91cf\u304c\u81a8\u308c\u4e0a\u304c\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u4eca\u5f8c\u306e\u4fee\u6b63\u306b\u5099\u3048\u3001\u3053\u3053\u3067\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u5b9a\u7fa9\u3092\u9069\u5207\u306a\u5927\u304d\u3055\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u5206\u5272\u3057\u307e\u3059\u3002"),Object(o.b)("p",null,"\u5206\u5272\u5f8c\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u6b21\u306e\u3068\u304a\u308a\u3068\u306a\u308a\u307e\u3059\u3002"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"RootStackNav.tsx"),Object(o.b)("li",{parentName:"ul"},"AuthedStackNav.tsx"),Object(o.b)("li",{parentName:"ul"},"UnauthedStackNav.tsx"),Object(o.b)("li",{parentName:"ul"},"types.ts")),Object(o.b)("p",null,"\u307e\u305a\u306f\u578b\u5b9a\u7fa9\u3092",Object(o.b)("inlineCode",{parentName:"p"},"types.ts"),"\u306b\u5207\u308a\u51fa\u3057\u307e\u3059\u3002"),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"\u578b\u5b9a\u7fa9\u3092\u5225\u30d5\u30a1\u30a4\u30eb\u306b\u5207\u308a\u51fa\u3059\u65b9\u6cd5\u306f\u3001React Navigation\u306e\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u3082\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\u3002"),Object(o.b)("p",{parentName:"div"},Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://reactnavigation.org/docs/typescript/#type-checking-screens"}),"Type checking screens")),Object(o.b)("blockquote",{parentName:"div"},Object(o.b)("p",{parentName:"blockquote"},"We recommend creating a separate types.tsx file where you keep the types and import them in your component files instead of repeating them in each file.")))),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:'jsx title="/src/navigation/types.ts"',jsx:!0,title:'"/src/navigation/types.ts"'}),"import {NavigatorScreenParams} from '@react-navigation/native';\n\nexport type UnauthedStackParamList = {\n  Welcome: undefined;\n  Login: undefined;\n  Instructions: undefined;\n};\n\nexport type AuthedStackParamList = {\n  UserSetting: undefined;\n};\n\nexport type RootStackParamList = {\n  Authed: NavigatorScreenParams<AuthedStackParamList>;\n  Unauthed: NavigatorScreenParams<UnauthedStackParamList>;\n};\n")),Object(o.b)("p",null,"\u6b21\u306b",Object(o.b)("inlineCode",{parentName:"p"},"AuthedStackNav"),"\u3068",Object(o.b)("inlineCode",{parentName:"p"},"UnauthedStackNav"),"\u3092\u305d\u308c\u305e\u308c\u5225\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5207\u308a\u51fa\u3057\u307e\u3059\u3002"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:'jsx title="/src/navigation/AuthedStackNav.tsx"',jsx:!0,title:'"/src/navigation/AuthedStackNav.tsx"'}),"import {createStackNavigator} from '@react-navigation/stack';\nimport React from 'react';\nimport {UserSetting} from 'screens';\n\nimport {AuthedStackParamList} from './types';\n\nconst nav = createStackNavigator<AuthedStackParamList>();\nexport const AuthedStackNav: React.FC = () => {\n  return (\n    <nav.Navigator screenOptions={{headerShown: false}}>\n      <nav.Screen name=\"UserSetting\" component={UserSetting} />\n    </nav.Navigator>\n  );\n};\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:'jsx title="/src/navigation/UnauthedStackNav.tsx"',jsx:!0,title:'"/src/navigation/UnauthedStackNav.tsx"'}),"import {RouteProp, useNavigation} from '@react-navigation/native';\nimport {createStackNavigator, StackNavigationOptions} from '@react-navigation/stack';\nimport React from 'react';\nimport {Button} from 'react-native-elements';\nimport {Instructions, Login, Welcome} from 'screens';\n\nimport {UnauthedStackParamList} from './types';\n\nconst nav = createStackNavigator<UnauthedStackParamList>();\nconst HeaderRight: React.FC = () => {\n  const navigation = useNavigation();\n  return <Button type=\"clear\" onPress={() => navigation.navigate('Login')} title=\"\u30ed\u30b0\u30a4\u30f3\" />;\n};\nconst createScreenOptions: (props: {\n  route: RouteProp<UnauthedStackParamList, keyof UnauthedStackParamList>;\n}) => StackNavigationOptions = ({route}) => {\n  if (route.name === 'Login') {\n    return {};\n  } else {\n    return {headerRight: () => <HeaderRight />};\n  }\n};\n\nexport const UnauthedStackNav: React.FC = () => {\n  return (\n    <nav.Navigator initialRouteName=\"Welcome\" screenOptions={createScreenOptions}>\n      <nav.Screen\n        name=\"Welcome\"\n        component={Welcome}\n        options={{\n          headerTitle: 'Welcome',\n        }}\n      />\n      <nav.Screen\n        name=\"Login\"\n        component={Login}\n        options={{\n          headerTitle: '\u30ed\u30b0\u30a4\u30f3',\n        }}\n      />\n      <nav.Screen name=\"Instructions\" component={Instructions} />\n    </nav.Navigator>\n  );\n};\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"/src/navigation/index.ts"),"\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-diff",metastring:'jsx title="/src/navigation/index.ts"',jsx:!0,title:'"/src/navigation/index.ts"'}),"  export * from './RootStackNav';\n+ export * from './UnauthedStackNav';\n+ export * from './AuthedStackNav';\n")),Object(o.b)("p",null,"\u6700\u5f8c\u306b",Object(o.b)("inlineCode",{parentName:"p"},"RootStackNav"),"\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\u4fee\u6b63\u91cf\u304c\u591a\u3044\u306e\u3067\u3001\u6b21\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067",Object(o.b)("inlineCode",{parentName:"p"},"RootStackNav.tsx"),"\u3092\u4e0a\u66f8\u304d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:'jsx title="/src/navigation/RootStackNav.tsx"',jsx:!0,title:'"/src/navigation/RootStackNav.tsx"'}),"import {createStackNavigator} from '@react-navigation/stack';\nimport {useUserContext} from 'contexts/UserContext';\nimport React from 'react';\n\nimport {AuthedStackNav} from './AuthedStackNav';\nimport {UnauthedStackNav} from './UnauthedStackNav';\nimport {RootStackParamList} from './types';\n\nconst nav = createStackNavigator<RootStackParamList>();\nexport const RootStackNav: React.FC = () => {\n  const userContext = useUserContext();\n  return (\n    <nav.Navigator screenOptions={{headerShown: false}}>\n      {userContext.isLoggedIn ? (\n        <nav.Screen name=\"Authed\" component={AuthedStackNav} />\n      ) : (\n        <nav.Screen name=\"Unauthed\" component={UnauthedStackNav} />\n      )}\n    </nav.Navigator>\n  );\n};\n")),Object(o.b)("p",null,"\u4fee\u6b63\u3067\u304d\u305f\u3089\u5b9f\u884c\u3057\u3066\u3001\u52d5\u4f5c\u306b\u554f\u984c\u304c\u306a\u3044\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"))}m.isMDXComponent=!0},152:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),m=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=m(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},v=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),l=m(n),v=a,b=l["".concat(i,".").concat(v)]||l[v]||u[v]||o;return n?r.a.createElement(b,c(c({ref:t},s),{},{components:n})):r.a.createElement(b,c({ref:t},s))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=v;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}v.displayName="MDXCreateElement"}}]);
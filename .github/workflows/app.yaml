name: SantokuApp

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    paths:
      - SantokuApp/**/*.js
      - SantokuApp/**/*.jsx
      - SantokuApp/**/*.ts
      - SantokuApp/**/*.tsx
      - SantokuApp/jest/**
      - SantokuApp/src/**
      - SantokuApp/.editorconfig
      - SantokuApp/.eslintrc.js
      - SantokuApp/babel.config.js
      - SantokuApp/index.js
      - SantokuApp/jest.config.js
      - SantokuApp/metro.config.js
      - SantokuApp/package.json
      - SantokuApp/package-lock.json
      - SantokuApp/tsconfig.json
      - .github/workflows/app.yaml
      - .github/workflows/report.yaml
    types:
      - opened
      - synchronize
      - reopened

jobs:
  lint-and-test:
    name: Lints, Tests
    # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-10.15-Readme.md
    runs-on: macos-10.15
    env:
      REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      # Cache '.npm' to speed up clean-install when package-lock.json is updated.
      # Loosened up the restore-keys a bit, as it doesn't have to match the contents of package-lock.json exactly.
      - name: Cache .npm
        id: cache-npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          # If cache is corrupted, increment prefixed number.
          key: 1-${{ runner.os }}-npm-${{ hashFiles('SantokuApp/**/package-lock.json') }}
          restore-keys: |
            1-${{ runner.os }}-npm-

      # If package-lock.json matches, node_modules will also match.
      # So, cache node_modules directly to skip install step.
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: SantokuApp/node_modules
          # If cache is corrupted, increment prefixed number.
          key: 1-${{ runner.os }}-SantokuApp-node-modules-${{ hashFiles('SantokuApp/**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          npm clean-install --prefix SantokuApp 2>&1 | tee /dev/stderr | test $(grep --count -E '(Error:|gyp ERR!)') -le 0

      - name: Set up reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Lint (ESLint)
        continue-on-error: true
        run: |
          cd SantokuApp && npm run -s lint:es -- -f eslint-formatter-rdjson | reviewdog -tee -fail-on-error -reporter=github-check -f=rdjson -name="ESLint (SantokuApp)"

      - name: Lint (TypeScript)
        continue-on-error: true
        run: |
          cd SantokuApp && npm run -s lint:tsc | reviewdog -tee -fail-on-error -reporter=github-check -f=tsc -name="TypeScript (SantokuApp)"

      - name: Test
        continue-on-error: true
        run: |
          npm run -s test --prefix SantokuApp -- --ci --reporters=default --reporters=jest-junit --coverage

      - name: Archive workflow results
        uses: actions/upload-artifact@v2
        continue-on-error: true
        with:
          name: workflow-results
          path: |
            SantokuApp/jest-junit.xml
